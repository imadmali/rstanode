% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stan_ode.R
\name{stan_ode}
\alias{stan_ode}
\title{stan_ode}
\usage{
stan_ode(func, state, pars, times, t0 = NULL, integrator = c("rk45", "bdf"),
  sampling = FALSE, events = NULL, ...)
}
\arguments{
\item{func}{A function (currently if-else statements are not supported).}

\item{state}{A named vector of the initial conditions of the state variables.}

\item{pars}{A named vector of the parameter values.}

\item{times}{A sequence of time steps.}

\item{t0}{Initial time.}

\item{integrator}{The type of integrator to use.}

\item{sampling}{A logical declaration as to whether you want sample the parameters.}

\item{...}{Optional parameters for \code{rstan::stan()}.}
}
\value{
A Stan fit object containing ODE simulations/samples.
}
\description{
An ODE wrapper for RStan.
}
\examples{
# Simple ODE
f <- function(y, t, p) {
  dy1 <- y2
  dy2 <- -y1 - theta1 * y2
  return(dy1 = dy1, dy2 = dy2)
}
fit <- stan_ode(f, state = c("y1" = 2, "y2" = 5),
                pars = c("theta1" = 0.5),
                times = seq(1,10,by=0.01), t0 = 0,
                integrator = "bdf",
                sampling = FALSE)
sims <- extract(fit, pars = "y_hat")
sims <- unname(unlist(sims))

# Simple Harmonic Oscillator
sho <- function(y, p ,t) {
  dy1 = y2
  dy2 = -y1 - theta * y2
  return(list(dy1, dy2))
}

fit <- stan_ode(sho, state = c("y1" = 1, "y2" = 0),
                pars = c("theta" = 0.15),
                times = seq(1,50,by=0.1), t0 = 0,
                integrator = "bdf",
                sampling = FALSE)

sims <- extract(fit, pars = "y_hat")$y_hat[1,,]
plot(sims[,1], sims[,2], type = "l", lwd = 2,
     xlab = "y1", ylab = "y2", main = "Simple Harmonic Oscillator")
}
