% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stan_ode_generate.R
\name{stan_ode_generate}
\alias{stan_ode_generate}
\title{stan_ode_generate}
\usage{
stan_ode_generate(obj, has_events, integrator)
}
\arguments{
\item{obj}{Output of \code{stan_lines}.}

\item{has_events}{A logical value that indicates whether or not the model contains events.}

\item{integrator}{The type of integrator to use. One of either \code{"rk45"} or \code{"bdf"}.}
}
\value{
A string with the Stan model which can be used in \code{\link[rstan]{stan}}. A more
readable representation of the model can be constructed by applying the
\code{\link[base]{cat}} function to the output.
}
\description{
Generates a syntactically valid Stan program using the ODE system generated by
\code{\link{stan_lines}}.
}
\examples{
# Define the ODE system as an R function
two_cpt <- function(t, y, parms) {
  with(as.list(c(y, parms)), {
    dy_gut = -ka * y_gut
    dy_cent = ka * y_gut - (CL/V_cent + Q/V_cent) * y_cent + (Q/V_peri) * y_peri
    dy_peri = (Q/V_cent) * y_cent - (Q/V_peri) * y_peri
    return(list(c(dy_gut=dy_gut, dy_cent=dy_cent, dy_peri=dy_peri)))
  })
}
# Create the time steps, inital state values, and parameter values
pars <- c("CL" = 10, Q = 13, "V_cent" = 20, "V_peri" = 73, ka = 3)
yini <- c("y_gut" = 0, "y_cent" = 0, "y_peri" = 0)
time_steps <- seq(0, 150, by = 0.01)
# Convert the R defined ODE into Stan syntax
sl <- stan_lines(two_cpt, state = yini,
                 pars = pars,
                 times = time_steps)
# Generate the useable Stan file
cat(stan_ode_generate(sl, has_events = TRUE, integrator = "rk45"))
                
}
\seealso{
\code{\link{stan_lines}}
}
